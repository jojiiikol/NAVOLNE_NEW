services:
  db:
    image: postgres:16-alpine
    hostname: db
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=205896
      - POSTGRES_DB=crow_new
    restart: on-failure
    ports:
      - "5432:5432"

  web:
    build:
      context: ../crowdfunding
    container_name: web
    command: bash -c "sleep 10 && python manage.py migrate && gunicorn crowdfunding.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - 8000:8000
    depends_on:
      - db
    env_file:
      - .env


  rabbitmq:
    image: rabbitmq:4.0.5
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"

  email_worker:
    build:
      context: ../crowdfunding
    container_name: email_worker
    restart: on-failure
    command: celery -A crowdfunding.celery worker -l INFO -Q email_queue
    depends_on:
      - web
      - rabbitmq
      - db

  transfer_status_worker:
    build:
      context: ../crowdfunding
    restart: on-failure
    container_name: transfer_status_worker
    command: celery -A crowdfunding.celery worker -l INFO -Q transfer_status_queue
    depends_on:
      - web
      - rabbitmq
      - db

  celery_beat:
    build:
      context: ../crowdfunding
    restart: on-failure
    container_name: celery_beat
    command: celery -A crowdfunding.celery beat -l INFO
    depends_on:
      - web
      - rabbitmq
      - db
      - transfer_status_worker

  frontend:
    stdin_open: true
    build:
      context: frontend
    ports:
      - "3000:3000"
    volumes:
      - "/usr/src/app/frontend/node_modules"
      - "./:/usr/src/app/frontend"
    depends_on:
      - web
