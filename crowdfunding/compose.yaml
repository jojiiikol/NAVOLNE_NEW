services:
  db:
    image: postgres:16-alpine
    hostname: db
    container_name: db
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    restart: always
    ports:
      - "5432:5432"

  nginx:
    build:
      context: ./frontend
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    restart: always

  web:
    build:
      context: ../crowdfunding
    container_name: web
    command: bash -c "sleep 10 && python manage.py migrate && if [ ! -d '/usr/src/app/staticfiles' ] || [ -z \"$(ls -A /usr/src/app/staticfiles)\" ]; then python manage.py collectstatic --noinput; fi && gunicorn crowdfunding.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    expose:
      - 8000
    depends_on:
      - db
      - redis
      - rabbitmq
    env_file:
      - .env
    restart: always

  redis:
    image: redis:7.4.2
    container_name: redis
    hostname: redis
    expose:
      - 6379
    env_file:
      - .env
    restart: always

  rabbitmq:
    image: rabbitmq:4.0.5
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

  email_worker:
    build:
      context: ../crowdfunding
    container_name: email_worker
    restart: always
    command: celery -A crowdfunding.celery worker -l INFO -Q email_queue
    depends_on:
      - web
      - rabbitmq
      - db

  transfer_status_worker:
    build:
      context: ../crowdfunding
    restart: always
    container_name: transfer_status_worker
    command: celery -A crowdfunding.celery worker -l INFO -Q transfer_status_queue
    depends_on:
      - web
      - rabbitmq
      - db
      - celery_beat

  payment_status_worker:
    build:
      context: ../crowdfunding
    restart: always
    container_name: payment_status_worker
    command: celery -A crowdfunding.celery worker -l INFO -Q yookassa_queue
    depends_on:
      - web
      - rabbitmq
      - celery_beat

  refund_worker:
    build:
      context: ../crowdfunding
    restart: always
    container_name: refund_worker
    command: celery -A crowdfunding.celery worker -l INFO -Q refund_queue
    depends_on:
      - web
      - rabbitmq

  celery_beat:
    build:
      context: ../crowdfunding
    restart: always
    container_name: celery_beat
    command: celery -A crowdfunding.celery beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - web
      - rabbitmq
      - db


volumes:
  postgres_data:
  static_volume:
  media_volume: